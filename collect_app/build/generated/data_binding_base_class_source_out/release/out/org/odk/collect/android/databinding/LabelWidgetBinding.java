// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;
import org.odk.collect.android.formentry.questions.AudioVideoImageTextLabel;

public final class LabelWidgetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout answerContainer;

  @NonNull
  public final FrameLayout center;

  @NonNull
  public final FrameLayout helpText;

  @NonNull
  public final AudioVideoImageTextLabel questionLabel;

  @NonNull
  public final RelativeLayout questionWidgetContainer;

  @NonNull
  public final FrameLayout spaceBox;

  private LabelWidgetBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout answerContainer, @NonNull FrameLayout center,
      @NonNull FrameLayout helpText, @NonNull AudioVideoImageTextLabel questionLabel,
      @NonNull RelativeLayout questionWidgetContainer, @NonNull FrameLayout spaceBox) {
    this.rootView = rootView;
    this.answerContainer = answerContainer;
    this.center = center;
    this.helpText = helpText;
    this.questionLabel = questionLabel;
    this.questionWidgetContainer = questionWidgetContainer;
    this.spaceBox = spaceBox;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LabelWidgetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LabelWidgetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.label_widget, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LabelWidgetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answer_container;
      LinearLayout answerContainer = rootView.findViewById(id);
      if (answerContainer == null) {
        break missingId;
      }

      id = R.id.center;
      FrameLayout center = rootView.findViewById(id);
      if (center == null) {
        break missingId;
      }

      id = R.id.help_text;
      FrameLayout helpText = rootView.findViewById(id);
      if (helpText == null) {
        break missingId;
      }

      id = R.id.question_label;
      AudioVideoImageTextLabel questionLabel = rootView.findViewById(id);
      if (questionLabel == null) {
        break missingId;
      }

      RelativeLayout questionWidgetContainer = (RelativeLayout) rootView;

      id = R.id.space_box;
      FrameLayout spaceBox = rootView.findViewById(id);
      if (spaceBox == null) {
        break missingId;
      }

      return new LabelWidgetBinding((RelativeLayout) rootView, answerContainer, center, helpText,
          questionLabel, questionWidgetContainer, spaceBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
