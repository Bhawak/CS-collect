// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.activities;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.android.permissions.PermissionsProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CollectAbstractActivity_MembersInjector implements MembersInjector<CollectAbstractActivity> {
  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  public CollectAbstractActivity_MembersInjector(Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider) {
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
  }

  public static MembersInjector<CollectAbstractActivity> create(
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider) {
    return new CollectAbstractActivity_MembersInjector(permissionsProvider, settingsProvider);
  }

  @Override
  public void injectMembers(CollectAbstractActivity instance) {
    injectPermissionsProvider(instance, permissionsProvider.get());
    injectSettingsProvider(instance, settingsProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.CollectAbstractActivity.permissionsProvider")
  public static void injectPermissionsProvider(CollectAbstractActivity instance,
      PermissionsProvider permissionsProvider) {
    instance.permissionsProvider = permissionsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.CollectAbstractActivity.settingsProvider")
  public static void injectSettingsProvider(CollectAbstractActivity instance,
      SettingsProvider settingsProvider) {
    instance.settingsProvider = settingsProvider;
  }
}
