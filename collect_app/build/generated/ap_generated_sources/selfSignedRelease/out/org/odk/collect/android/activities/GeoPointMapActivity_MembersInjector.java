// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.activities;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.android.geo.MapProvider;
import org.odk.collect.android.permissions.PermissionsProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GeoPointMapActivity_MembersInjector implements MembersInjector<GeoPointMapActivity> {
  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<MapProvider> mapProvider;

  public GeoPointMapActivity_MembersInjector(Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider, Provider<MapProvider> mapProvider) {
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
    this.mapProvider = mapProvider;
  }

  public static MembersInjector<GeoPointMapActivity> create(
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider, Provider<MapProvider> mapProvider) {
    return new GeoPointMapActivity_MembersInjector(permissionsProvider, settingsProvider, mapProvider);
  }

  @Override
  public void injectMembers(GeoPointMapActivity instance) {
    CollectAbstractActivity_MembersInjector.injectPermissionsProvider(instance, permissionsProvider.get());
    CollectAbstractActivity_MembersInjector.injectSettingsProvider(instance, settingsProvider.get());
    injectMapProvider(instance, mapProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.GeoPointMapActivity.mapProvider")
  public static void injectMapProvider(GeoPointMapActivity instance, MapProvider mapProvider) {
    instance.mapProvider = mapProvider;
  }
}
