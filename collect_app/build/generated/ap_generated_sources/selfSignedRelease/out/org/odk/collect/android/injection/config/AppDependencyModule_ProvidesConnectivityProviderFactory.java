// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.injection.config;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import org.odk.collect.android.network.NetworkStateProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppDependencyModule_ProvidesConnectivityProviderFactory implements Factory<NetworkStateProvider> {
  private final AppDependencyModule module;

  public AppDependencyModule_ProvidesConnectivityProviderFactory(AppDependencyModule module) {
    this.module = module;
  }

  @Override
  public NetworkStateProvider get() {
    return providesConnectivityProvider(module);
  }

  public static AppDependencyModule_ProvidesConnectivityProviderFactory create(
      AppDependencyModule module) {
    return new AppDependencyModule_ProvidesConnectivityProviderFactory(module);
  }

  public static NetworkStateProvider providesConnectivityProvider(AppDependencyModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providesConnectivityProvider());
  }
}
