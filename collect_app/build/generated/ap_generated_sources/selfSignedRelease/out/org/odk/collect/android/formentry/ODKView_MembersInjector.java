// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.formentry;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.android.formentry.media.AudioHelperFactory;
import org.odk.collect.android.permissions.PermissionsProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;
import org.odk.collect.android.utilities.ActivityAvailability;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ODKView_MembersInjector implements MembersInjector<ODKView> {
  private final Provider<AudioHelperFactory> audioHelperFactoryProvider;

  private final Provider<ActivityAvailability> activityAvailabilityProvider;

  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  public ODKView_MembersInjector(Provider<AudioHelperFactory> audioHelperFactoryProvider,
      Provider<ActivityAvailability> activityAvailabilityProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider) {
    this.audioHelperFactoryProvider = audioHelperFactoryProvider;
    this.activityAvailabilityProvider = activityAvailabilityProvider;
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
  }

  public static MembersInjector<ODKView> create(
      Provider<AudioHelperFactory> audioHelperFactoryProvider,
      Provider<ActivityAvailability> activityAvailabilityProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider) {
    return new ODKView_MembersInjector(audioHelperFactoryProvider, activityAvailabilityProvider, permissionsProvider, settingsProvider);
  }

  @Override
  public void injectMembers(ODKView instance) {
    injectAudioHelperFactory(instance, audioHelperFactoryProvider.get());
    injectActivityAvailability(instance, activityAvailabilityProvider.get());
    injectPermissionsProvider(instance, permissionsProvider.get());
    injectSettingsProvider(instance, settingsProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.formentry.ODKView.audioHelperFactory")
  public static void injectAudioHelperFactory(ODKView instance,
      AudioHelperFactory audioHelperFactory) {
    instance.audioHelperFactory = audioHelperFactory;
  }

  @InjectedFieldSignature("org.odk.collect.android.formentry.ODKView.activityAvailability")
  public static void injectActivityAvailability(ODKView instance,
      ActivityAvailability activityAvailability) {
    instance.activityAvailability = activityAvailability;
  }

  @InjectedFieldSignature("org.odk.collect.android.formentry.ODKView.permissionsProvider")
  public static void injectPermissionsProvider(ODKView instance,
      PermissionsProvider permissionsProvider) {
    instance.permissionsProvider = permissionsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.formentry.ODKView.settingsProvider")
  public static void injectSettingsProvider(ODKView instance, SettingsProvider settingsProvider) {
    instance.settingsProvider = settingsProvider;
  }
}
