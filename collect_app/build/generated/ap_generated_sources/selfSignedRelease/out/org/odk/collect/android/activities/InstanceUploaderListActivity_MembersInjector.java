// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.activities;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.analytics.Analytics;
import org.odk.collect.android.backgroundwork.InstanceSubmitScheduler;
import org.odk.collect.android.network.NetworkStateProvider;
import org.odk.collect.android.permissions.PermissionsProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;
import org.odk.collect.android.projects.CurrentProjectProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InstanceUploaderListActivity_MembersInjector implements MembersInjector<InstanceUploaderListActivity> {
  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<CurrentProjectProvider> currentProjectProvider;

  private final Provider<Analytics> analyticsProvider;

  private final Provider<NetworkStateProvider> connectivityProvider;

  private final Provider<InstanceSubmitScheduler> instanceSubmitSchedulerProvider;

  public InstanceUploaderListActivity_MembersInjector(
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<CurrentProjectProvider> currentProjectProvider,
      Provider<Analytics> analyticsProvider, Provider<NetworkStateProvider> connectivityProvider,
      Provider<InstanceSubmitScheduler> instanceSubmitSchedulerProvider) {
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
    this.currentProjectProvider = currentProjectProvider;
    this.analyticsProvider = analyticsProvider;
    this.connectivityProvider = connectivityProvider;
    this.instanceSubmitSchedulerProvider = instanceSubmitSchedulerProvider;
  }

  public static MembersInjector<InstanceUploaderListActivity> create(
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<CurrentProjectProvider> currentProjectProvider,
      Provider<Analytics> analyticsProvider, Provider<NetworkStateProvider> connectivityProvider,
      Provider<InstanceSubmitScheduler> instanceSubmitSchedulerProvider) {
    return new InstanceUploaderListActivity_MembersInjector(permissionsProvider, settingsProvider, currentProjectProvider, analyticsProvider, connectivityProvider, instanceSubmitSchedulerProvider);
  }

  @Override
  public void injectMembers(InstanceUploaderListActivity instance) {
    CollectAbstractActivity_MembersInjector.injectPermissionsProvider(instance, permissionsProvider.get());
    CollectAbstractActivity_MembersInjector.injectSettingsProvider(instance, settingsProvider.get());
    injectCurrentProjectProvider(instance, currentProjectProvider.get());
    injectAnalytics(instance, analyticsProvider.get());
    injectConnectivityProvider(instance, connectivityProvider.get());
    injectInstanceSubmitScheduler(instance, instanceSubmitSchedulerProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.InstanceUploaderListActivity.currentProjectProvider")
  public static void injectCurrentProjectProvider(InstanceUploaderListActivity instance,
      CurrentProjectProvider currentProjectProvider) {
    instance.currentProjectProvider = currentProjectProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.InstanceUploaderListActivity.analytics")
  public static void injectAnalytics(InstanceUploaderListActivity instance, Analytics analytics) {
    instance.analytics = analytics;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.InstanceUploaderListActivity.connectivityProvider")
  public static void injectConnectivityProvider(InstanceUploaderListActivity instance,
      NetworkStateProvider connectivityProvider) {
    instance.connectivityProvider = connectivityProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.activities.InstanceUploaderListActivity.instanceSubmitScheduler")
  public static void injectInstanceSubmitScheduler(InstanceUploaderListActivity instance,
      InstanceSubmitScheduler instanceSubmitScheduler) {
    instance.instanceSubmitScheduler = instanceSubmitScheduler;
  }
}
