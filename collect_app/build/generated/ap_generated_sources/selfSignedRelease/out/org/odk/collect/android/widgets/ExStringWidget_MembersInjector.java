// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.widgets;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.javarosa.core.reference.ReferenceManager;
import org.odk.collect.analytics.Analytics;
import org.odk.collect.android.formentry.media.AudioHelperFactory;
import org.odk.collect.android.permissions.PermissionsProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;
import org.odk.collect.android.utilities.ActivityAvailability;
import org.odk.collect.android.utilities.ScreenUtils;
import org.odk.collect.android.utilities.SoftKeyboardController;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ExStringWidget_MembersInjector implements MembersInjector<ExStringWidget> {
  private final Provider<ReferenceManager> referenceManagerProvider;

  private final Provider<AudioHelperFactory> audioHelperFactoryProvider;

  private final Provider<Analytics> analyticsProvider;

  private final Provider<ScreenUtils> screenUtilsProvider;

  private final Provider<SoftKeyboardController> softKeyboardControllerProvider;

  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<ActivityAvailability> activityAvailabilityProvider;

  public ExStringWidget_MembersInjector(Provider<ReferenceManager> referenceManagerProvider,
      Provider<AudioHelperFactory> audioHelperFactoryProvider,
      Provider<Analytics> analyticsProvider, Provider<ScreenUtils> screenUtilsProvider,
      Provider<SoftKeyboardController> softKeyboardControllerProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<ActivityAvailability> activityAvailabilityProvider) {
    this.referenceManagerProvider = referenceManagerProvider;
    this.audioHelperFactoryProvider = audioHelperFactoryProvider;
    this.analyticsProvider = analyticsProvider;
    this.screenUtilsProvider = screenUtilsProvider;
    this.softKeyboardControllerProvider = softKeyboardControllerProvider;
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
    this.activityAvailabilityProvider = activityAvailabilityProvider;
  }

  public static MembersInjector<ExStringWidget> create(
      Provider<ReferenceManager> referenceManagerProvider,
      Provider<AudioHelperFactory> audioHelperFactoryProvider,
      Provider<Analytics> analyticsProvider, Provider<ScreenUtils> screenUtilsProvider,
      Provider<SoftKeyboardController> softKeyboardControllerProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<ActivityAvailability> activityAvailabilityProvider) {
    return new ExStringWidget_MembersInjector(referenceManagerProvider, audioHelperFactoryProvider, analyticsProvider, screenUtilsProvider, softKeyboardControllerProvider, permissionsProvider, settingsProvider, activityAvailabilityProvider);
  }

  @Override
  public void injectMembers(ExStringWidget instance) {
    QuestionWidget_MembersInjector.injectReferenceManager(instance, referenceManagerProvider.get());
    QuestionWidget_MembersInjector.injectAudioHelperFactory(instance, audioHelperFactoryProvider.get());
    QuestionWidget_MembersInjector.injectAnalytics(instance, analyticsProvider.get());
    QuestionWidget_MembersInjector.injectScreenUtils(instance, screenUtilsProvider.get());
    QuestionWidget_MembersInjector.injectSoftKeyboardController(instance, softKeyboardControllerProvider.get());
    QuestionWidget_MembersInjector.injectPermissionsProvider(instance, permissionsProvider.get());
    QuestionWidget_MembersInjector.injectSettingsProvider(instance, settingsProvider.get());
    injectActivityAvailability(instance, activityAvailabilityProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.widgets.ExStringWidget.activityAvailability")
  public static void injectActivityAvailability(ExStringWidget instance,
      ActivityAvailability activityAvailability) {
    instance.activityAvailability = activityAvailability;
  }
}
