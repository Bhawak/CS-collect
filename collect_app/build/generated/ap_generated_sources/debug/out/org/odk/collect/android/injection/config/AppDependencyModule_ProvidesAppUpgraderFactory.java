// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.injection.config;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import org.odk.collect.android.application.initialization.ExistingProjectMigrator;
import org.odk.collect.android.application.initialization.ExistingSettingsMigrator;
import org.odk.collect.android.application.initialization.FormUpdatesUpgrade;
import org.odk.collect.android.application.initialization.upgrade.AppUpgrader;
import org.odk.collect.android.preferences.source.SettingsProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppDependencyModule_ProvidesAppUpgraderFactory implements Factory<AppUpgrader> {
  private final AppDependencyModule module;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<ExistingProjectMigrator> existingProjectMigratorProvider;

  private final Provider<FormUpdatesUpgrade> formUpdatesUpgradeProvider;

  private final Provider<ExistingSettingsMigrator> existingSettingsMigratorProvider;

  public AppDependencyModule_ProvidesAppUpgraderFactory(AppDependencyModule module,
      Provider<SettingsProvider> settingsProvider,
      Provider<ExistingProjectMigrator> existingProjectMigratorProvider,
      Provider<FormUpdatesUpgrade> formUpdatesUpgradeProvider,
      Provider<ExistingSettingsMigrator> existingSettingsMigratorProvider) {
    this.module = module;
    this.settingsProvider = settingsProvider;
    this.existingProjectMigratorProvider = existingProjectMigratorProvider;
    this.formUpdatesUpgradeProvider = formUpdatesUpgradeProvider;
    this.existingSettingsMigratorProvider = existingSettingsMigratorProvider;
  }

  @Override
  public AppUpgrader get() {
    return providesAppUpgrader(module, settingsProvider.get(), existingProjectMigratorProvider.get(), formUpdatesUpgradeProvider.get(), existingSettingsMigratorProvider.get());
  }

  public static AppDependencyModule_ProvidesAppUpgraderFactory create(AppDependencyModule module,
      Provider<SettingsProvider> settingsProvider,
      Provider<ExistingProjectMigrator> existingProjectMigratorProvider,
      Provider<FormUpdatesUpgrade> formUpdatesUpgradeProvider,
      Provider<ExistingSettingsMigrator> existingSettingsMigratorProvider) {
    return new AppDependencyModule_ProvidesAppUpgraderFactory(module, settingsProvider, existingProjectMigratorProvider, formUpdatesUpgradeProvider, existingSettingsMigratorProvider);
  }

  public static AppUpgrader providesAppUpgrader(AppDependencyModule instance,
      SettingsProvider settingsProvider, ExistingProjectMigrator existingProjectMigrator,
      FormUpdatesUpgrade formUpdatesUpgrade, ExistingSettingsMigrator existingSettingsMigrator) {
    return Preconditions.checkNotNullFromProvides(instance.providesAppUpgrader(settingsProvider, existingProjectMigrator, formUpdatesUpgrade, existingSettingsMigrator));
  }
}
