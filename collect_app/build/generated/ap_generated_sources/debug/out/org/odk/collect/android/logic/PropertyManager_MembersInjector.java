// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.logic;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.android.events.RxEventBus;
import org.odk.collect.android.permissions.PermissionsProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;
import org.odk.collect.android.utilities.DeviceDetailsProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PropertyManager_MembersInjector implements MembersInjector<PropertyManager> {
  private final Provider<RxEventBus> eventBusProvider;

  private final Provider<DeviceDetailsProvider> deviceDetailsProvider;

  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  public PropertyManager_MembersInjector(Provider<RxEventBus> eventBusProvider,
      Provider<DeviceDetailsProvider> deviceDetailsProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider) {
    this.eventBusProvider = eventBusProvider;
    this.deviceDetailsProvider = deviceDetailsProvider;
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
  }

  public static MembersInjector<PropertyManager> create(Provider<RxEventBus> eventBusProvider,
      Provider<DeviceDetailsProvider> deviceDetailsProvider,
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider) {
    return new PropertyManager_MembersInjector(eventBusProvider, deviceDetailsProvider, permissionsProvider, settingsProvider);
  }

  @Override
  public void injectMembers(PropertyManager instance) {
    injectEventBus(instance, eventBusProvider.get());
    injectDeviceDetailsProvider(instance, deviceDetailsProvider.get());
    injectPermissionsProvider(instance, permissionsProvider.get());
    injectSettingsProvider(instance, settingsProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.logic.PropertyManager.eventBus")
  public static void injectEventBus(PropertyManager instance, RxEventBus eventBus) {
    instance.eventBus = eventBus;
  }

  @InjectedFieldSignature("org.odk.collect.android.logic.PropertyManager.deviceDetailsProvider")
  public static void injectDeviceDetailsProvider(PropertyManager instance,
      DeviceDetailsProvider deviceDetailsProvider) {
    instance.deviceDetailsProvider = deviceDetailsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.logic.PropertyManager.permissionsProvider")
  public static void injectPermissionsProvider(PropertyManager instance,
      PermissionsProvider permissionsProvider) {
    instance.permissionsProvider = permissionsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.logic.PropertyManager.settingsProvider")
  public static void injectSettingsProvider(PropertyManager instance,
      SettingsProvider settingsProvider) {
    instance.settingsProvider = settingsProvider;
  }
}
