// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.application;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.android.application.initialization.ApplicationInitializer;
import org.odk.collect.android.preferences.source.SettingsProvider;
import org.odk.collect.projects.ProjectsRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class Collect_MembersInjector implements MembersInjector<Collect> {
  private final Provider<ApplicationInitializer> applicationInitializerProvider;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<ProjectsRepository> projectsRepositoryProvider;

  public Collect_MembersInjector(Provider<ApplicationInitializer> applicationInitializerProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<ProjectsRepository> projectsRepositoryProvider) {
    this.applicationInitializerProvider = applicationInitializerProvider;
    this.settingsProvider = settingsProvider;
    this.projectsRepositoryProvider = projectsRepositoryProvider;
  }

  public static MembersInjector<Collect> create(
      Provider<ApplicationInitializer> applicationInitializerProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<ProjectsRepository> projectsRepositoryProvider) {
    return new Collect_MembersInjector(applicationInitializerProvider, settingsProvider, projectsRepositoryProvider);
  }

  @Override
  public void injectMembers(Collect instance) {
    injectApplicationInitializer(instance, applicationInitializerProvider.get());
    injectSettingsProvider(instance, settingsProvider.get());
    injectProjectsRepository(instance, projectsRepositoryProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.application.Collect.applicationInitializer")
  public static void injectApplicationInitializer(Collect instance,
      ApplicationInitializer applicationInitializer) {
    instance.applicationInitializer = applicationInitializer;
  }

  @InjectedFieldSignature("org.odk.collect.android.application.Collect.settingsProvider")
  public static void injectSettingsProvider(Collect instance, SettingsProvider settingsProvider) {
    instance.settingsProvider = settingsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.application.Collect.projectsRepository")
  public static void injectProjectsRepository(Collect instance,
      ProjectsRepository projectsRepository) {
    instance.projectsRepository = projectsRepository;
  }
}
