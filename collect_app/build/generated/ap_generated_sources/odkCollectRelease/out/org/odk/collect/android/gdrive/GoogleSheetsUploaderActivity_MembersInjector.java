// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.gdrive;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.analytics.Analytics;
import org.odk.collect.android.activities.CollectAbstractActivity_MembersInjector;
import org.odk.collect.android.network.NetworkStateProvider;
import org.odk.collect.android.permissions.PermissionsProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;
import org.odk.collect.android.utilities.FormsRepositoryProvider;
import org.odk.collect.android.utilities.InstancesRepositoryProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GoogleSheetsUploaderActivity_MembersInjector implements MembersInjector<GoogleSheetsUploaderActivity> {
  private final Provider<PermissionsProvider> permissionsProvider;

  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<GoogleAccountsManager> accountsManagerProvider;

  private final Provider<GoogleApiProvider> googleApiProvider;

  private final Provider<NetworkStateProvider> connectivityProvider;

  private final Provider<Analytics> analyticsProvider;

  private final Provider<InstancesRepositoryProvider> instancesRepositoryProvider;

  private final Provider<FormsRepositoryProvider> formsRepositoryProvider;

  public GoogleSheetsUploaderActivity_MembersInjector(
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<GoogleAccountsManager> accountsManagerProvider,
      Provider<GoogleApiProvider> googleApiProvider,
      Provider<NetworkStateProvider> connectivityProvider, Provider<Analytics> analyticsProvider,
      Provider<InstancesRepositoryProvider> instancesRepositoryProvider,
      Provider<FormsRepositoryProvider> formsRepositoryProvider) {
    this.permissionsProvider = permissionsProvider;
    this.settingsProvider = settingsProvider;
    this.accountsManagerProvider = accountsManagerProvider;
    this.googleApiProvider = googleApiProvider;
    this.connectivityProvider = connectivityProvider;
    this.analyticsProvider = analyticsProvider;
    this.instancesRepositoryProvider = instancesRepositoryProvider;
    this.formsRepositoryProvider = formsRepositoryProvider;
  }

  public static MembersInjector<GoogleSheetsUploaderActivity> create(
      Provider<PermissionsProvider> permissionsProvider,
      Provider<SettingsProvider> settingsProvider,
      Provider<GoogleAccountsManager> accountsManagerProvider,
      Provider<GoogleApiProvider> googleApiProvider,
      Provider<NetworkStateProvider> connectivityProvider, Provider<Analytics> analyticsProvider,
      Provider<InstancesRepositoryProvider> instancesRepositoryProvider,
      Provider<FormsRepositoryProvider> formsRepositoryProvider) {
    return new GoogleSheetsUploaderActivity_MembersInjector(permissionsProvider, settingsProvider, accountsManagerProvider, googleApiProvider, connectivityProvider, analyticsProvider, instancesRepositoryProvider, formsRepositoryProvider);
  }

  @Override
  public void injectMembers(GoogleSheetsUploaderActivity instance) {
    CollectAbstractActivity_MembersInjector.injectPermissionsProvider(instance, permissionsProvider.get());
    CollectAbstractActivity_MembersInjector.injectSettingsProvider(instance, settingsProvider.get());
    injectAccountsManager(instance, accountsManagerProvider.get());
    injectGoogleApiProvider(instance, googleApiProvider.get());
    injectConnectivityProvider(instance, connectivityProvider.get());
    injectAnalytics(instance, analyticsProvider.get());
    injectInstancesRepositoryProvider(instance, instancesRepositoryProvider.get());
    injectFormsRepositoryProvider(instance, formsRepositoryProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.gdrive.GoogleSheetsUploaderActivity.accountsManager")
  public static void injectAccountsManager(GoogleSheetsUploaderActivity instance,
      GoogleAccountsManager accountsManager) {
    instance.accountsManager = accountsManager;
  }

  @InjectedFieldSignature("org.odk.collect.android.gdrive.GoogleSheetsUploaderActivity.googleApiProvider")
  public static void injectGoogleApiProvider(GoogleSheetsUploaderActivity instance,
      GoogleApiProvider googleApiProvider) {
    instance.googleApiProvider = googleApiProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.gdrive.GoogleSheetsUploaderActivity.connectivityProvider")
  public static void injectConnectivityProvider(GoogleSheetsUploaderActivity instance,
      NetworkStateProvider connectivityProvider) {
    instance.connectivityProvider = connectivityProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.gdrive.GoogleSheetsUploaderActivity.analytics")
  public static void injectAnalytics(GoogleSheetsUploaderActivity instance, Analytics analytics) {
    instance.analytics = analytics;
  }

  @InjectedFieldSignature("org.odk.collect.android.gdrive.GoogleSheetsUploaderActivity.instancesRepositoryProvider")
  public static void injectInstancesRepositoryProvider(GoogleSheetsUploaderActivity instance,
      InstancesRepositoryProvider instancesRepositoryProvider) {
    instance.instancesRepositoryProvider = instancesRepositoryProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.gdrive.GoogleSheetsUploaderActivity.formsRepositoryProvider")
  public static void injectFormsRepositoryProvider(GoogleSheetsUploaderActivity instance,
      FormsRepositoryProvider formsRepositoryProvider) {
    instance.formsRepositoryProvider = formsRepositoryProvider;
  }
}
