// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.formentry;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.odk.collect.android.permissions.PermissionsChecker;
import org.odk.collect.audiorecorder.recording.AudioRecorder;
import org.odk.collect.shared.Settings;
import org.odk.collect.utilities.Clock;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BackgroundAudioViewModel_Factory_Factory implements Factory<BackgroundAudioViewModel.Factory> {
  private final Provider<AudioRecorder> audioRecorderProvider;

  private final Provider<Settings> generalSettingsProvider;

  private final Provider<PermissionsChecker> permissionsCheckerProvider;

  private final Provider<Clock> clockProvider;

  public BackgroundAudioViewModel_Factory_Factory(Provider<AudioRecorder> audioRecorderProvider,
      Provider<Settings> generalSettingsProvider,
      Provider<PermissionsChecker> permissionsCheckerProvider, Provider<Clock> clockProvider) {
    this.audioRecorderProvider = audioRecorderProvider;
    this.generalSettingsProvider = generalSettingsProvider;
    this.permissionsCheckerProvider = permissionsCheckerProvider;
    this.clockProvider = clockProvider;
  }

  @Override
  public BackgroundAudioViewModel.Factory get() {
    return newInstance(audioRecorderProvider.get(), generalSettingsProvider.get(), permissionsCheckerProvider.get(), clockProvider.get());
  }

  public static BackgroundAudioViewModel_Factory_Factory create(
      Provider<AudioRecorder> audioRecorderProvider, Provider<Settings> generalSettingsProvider,
      Provider<PermissionsChecker> permissionsCheckerProvider, Provider<Clock> clockProvider) {
    return new BackgroundAudioViewModel_Factory_Factory(audioRecorderProvider, generalSettingsProvider, permissionsCheckerProvider, clockProvider);
  }

  public static BackgroundAudioViewModel.Factory newInstance(AudioRecorder audioRecorder,
      Settings generalSettings, PermissionsChecker permissionsChecker, Clock clock) {
    return new BackgroundAudioViewModel.Factory(audioRecorder, generalSettings, permissionsChecker, clock);
  }
}
