// Generated by Dagger (https://dagger.dev).
package org.odk.collect.android.fragments;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import org.odk.collect.android.network.NetworkStateProvider;
import org.odk.collect.android.preferences.source.SettingsProvider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MapBoxInitializationFragment_MembersInjector implements MembersInjector<MapBoxInitializationFragment> {
  private final Provider<SettingsProvider> settingsProvider;

  private final Provider<NetworkStateProvider> connectivityProvider;

  public MapBoxInitializationFragment_MembersInjector(Provider<SettingsProvider> settingsProvider,
      Provider<NetworkStateProvider> connectivityProvider) {
    this.settingsProvider = settingsProvider;
    this.connectivityProvider = connectivityProvider;
  }

  public static MembersInjector<MapBoxInitializationFragment> create(
      Provider<SettingsProvider> settingsProvider,
      Provider<NetworkStateProvider> connectivityProvider) {
    return new MapBoxInitializationFragment_MembersInjector(settingsProvider, connectivityProvider);
  }

  @Override
  public void injectMembers(MapBoxInitializationFragment instance) {
    injectSettingsProvider(instance, settingsProvider.get());
    injectConnectivityProvider(instance, connectivityProvider.get());
  }

  @InjectedFieldSignature("org.odk.collect.android.fragments.MapBoxInitializationFragment.settingsProvider")
  public static void injectSettingsProvider(MapBoxInitializationFragment instance,
      SettingsProvider settingsProvider) {
    instance.settingsProvider = settingsProvider;
  }

  @InjectedFieldSignature("org.odk.collect.android.fragments.MapBoxInitializationFragment.connectivityProvider")
  public static void injectConnectivityProvider(MapBoxInitializationFragment instance,
      NetworkStateProvider connectivityProvider) {
    instance.connectivityProvider = connectivityProvider;
  }
}
